Started by user Ramanachandran R S
[Pipeline] Start of Pipeline
[Pipeline] node
Running on Jenkins in C:\Users\raman\.jenkins\workspace\Assignment 5
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Declarative: Checkout SCM)
[Pipeline] checkout
Selected Git installation does not exist. Using Default
The recommended git tool is: NONE
No credentials specified
 > git.exe rev-parse --resolve-git-dir C:\Users\raman\.jenkins\workspace\Assignment 4\.git # timeout=10
Fetching changes from the remote Git repository
 > git.exe config remote.origin.url https://github.com/ramanarsr/Pytest.git # timeout=10
Fetching upstream changes from https://github.com/ramanarsr/Pytest.git
 > git.exe --version # timeout=10
 > git --version # 'git version 2.46.0.windows.1'
 > git.exe fetch --tags --force --progress -- https://github.com/ramanarsr/Pytest.git +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git.exe rev-parse "refs/remotes/origin/master^{commit}" # timeout=10
Checking out Revision 73d340141e9ccc188ac1278a896ee0dc6ed03370 (refs/remotes/origin/master)
 > git.exe config core.sparsecheckout # timeout=10
 > git.exe checkout -f 73d340141e9ccc188ac1278a896ee0dc6ed03370 # timeout=10
Commit message: "jenkinsfile update"
 > git.exe rev-list --no-walk 687fcddf034fcce9ad8e35f13e6cd32d469e1b33 # timeout=10
[Pipeline] }
[Pipeline] // stage
[Pipeline] withEnv
[Pipeline] {
[Pipeline] withEnv
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Changing Directory)
[Pipeline] script
[Pipeline] {
[Pipeline] echo
Changing Directory..
[Pipeline] dir
Running in C:\Users\raman\.jenkins\workspace\Assignment 5
[Pipeline] {
[Pipeline] echo
Directory changed to C:\Users\raman\.jenkins\workspace\Assignment 5
[Pipeline] echo
Installing Dependencies..
[Pipeline] bat

C:\Users\raman\.jenkins\workspace\Assignment 5>npm install 

added 355 packages, and audited 356 packages in 11s

124 packages are looking for funding
  run `npm fund` for details

found 0 vulnerabilities
[Pipeline] echo
Running Tests..
[Pipeline] bat

C:\Users\raman\.jenkins\workspace\Assignment 5>npm test 

> vite-project@0.0.0 test
> vitest

[?25l
[1m[7m[36m RUN [39m[27m[22m [36mv3.0.0 [39m[90mH:/nextrurn/new_jenkins_home/workspace/EXERCISE_4[39m

 [32mâœ“[39m src/App.test.jsx [2m([22m[2m1 test[22m[2m)[22m[90m 246[2mms[22m[39m

[2m Test Files [22m [1m[32m1 passed[39m[22m[90m (1)[39m
[2m      Tests [22m [1m[32m1 passed[39m[22m[90m (1)[39m
[2m   Start at [22m 21:26:08
[2m   Duration [22m 3.67s[2m (transform 112ms, setup 0ms, collect 1.07s, tests 246ms, environment 1.45s, prepare 239ms)[22m

[?25h
[Pipeline] echo
Building the project..
[Pipeline] bat

C:\Users\raman\.jenkins\workspace\Assignment 5>npm run build 

> vite-project@0.0.0 build
> vite build

[36mvite v6.0.7 [32mbuilding for production...[36m[39m
transforming...
[32mâœ“[39m 30 modules transformed.
rendering chunks...
computing gzip size...
[2mdist/[22m[32mindex.html                 [39m[1m[2m  0.47 kB[22m[1m[22m[2m â”‚ gzip:  0.31 kB[22m
[2mdist/[22m[32massets/react-CHdo91hT.svg  [39m[1m[2m  4.13 kB[22m[1m[22m[2m â”‚ gzip:  2.05 kB[22m
[2mdist/[22m[35massets/index-n_ryQ3BS.css  [39m[1m[2m  1.39 kB[22m[1m[22m[2m â”‚ gzip:  0.71 kB[22m
[2mdist/[22m[36massets/index-Bh-hXAGN.js   [39m[1m[2m143.87 kB[22m[1m[22m[2m â”‚ gzip: 46.34 kB[22m
[32mâœ“ built in 1.70s[39m
[Pipeline] echo
Deploying the application by copying the build folder to a deployment directory...
[Pipeline] bat

C:\Users\raman\.jenkins\workspace\Assignment 5>xcopy C:\Users\raman\.jenkins\workspace\Assignment 5\\dist C:\Users\raman\.jenkins\workspace\Assignment 5\\deployment-directory /E /I /H /Y 
C:\Users\raman\.jenkins\workspace\Assignment 5\\dist\index.html
C:\Users\raman\.jenkins\workspace\Assignment 5\\dist\vite.svg
C:\Users\raman\.jenkins\workspace\Assignment 5\\dist\assets\index-Bh-hXAGN.js
C:\Users\raman\.jenkins\workspace\Assignment 5\\dist\assets\index-n_ryQ3BS.css
C:\Users\raman\.jenkins\workspace\Assignment 5\\dist\assets\react-CHdo91hT.svg
5 File(s) copied
[Pipeline] }
[Pipeline] // dir
[Pipeline] }
[Pipeline] // script
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Declarative: Post Actions)
[Pipeline] echo
This will always run after the pipeline finishes.
[Pipeline] echo
This will run if the pipeline succeeds.
[Pipeline] }
[Pipeline] // stage
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // node
[Pipeline] End of Pipeline
Finished: SUCCESS
